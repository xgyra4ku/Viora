#include "inc/Client.h"

int main() {
    Client client;
    client.run();
    return 0;
}
// #include <iostream>
// #include <cstring>
// #include <winsock2.h>
//
// #pragma comment(lib, "ws2_32.lib")
//
// const char* SERVER_IP = "127.0.0.1";
// const int SERVER_PORT = 8080;
// const int BUFFER_SIZE = 1024;
//
// int main() {
//     WSADATA wsaData;
//     WSAStartup(MAKEWORD(2, 2), &wsaData);
//
//     // Создание сокета
//     SOCKET clientSocket = socket(AF_INET, SOCK_STREAM, 0);
//     if (clientSocket == INVALID_SOCKET) {
//         std::cerr << "Socket creation failed: " << WSAGetLastError() << std::endl;
//         return 1;
//     }
//
//     sockaddr_in serverAddr;
//     serverAddr.sin_family = AF_INET;
//     serverAddr.sin_addr.s_addr = inet_addr(SERVER_IP);
//     serverAddr.sin_port = htons(SERVER_PORT);
//
//     // Подключение к серверу
//     if (connect(clientSocket, (sockaddr*)&serverAddr, sizeof(serverAddr)) == SOCKET_ERROR) {
//         std::cerr << "Connection failed: " << WSAGetLastError() << std::endl;
//         closesocket(clientSocket);
//         WSACleanup();
//         return 1;
//     }
//
//     std::cout << "Connected to the server!" << std::endl;
//
//     char buffer[BUFFER_SIZE];
//     while (true) {
//         std::cout << "Enter message to send (or 'exit' to quit): ";
//         std::string message;
//         std::getline(std::cin, message);
//
//         if (message == "exit") {
//             break;
//         }
//
//         // Отправка сообщения на сервер
//         if (send(clientSocket, message.c_str(), message.size(), 0) == SOCKET_ERROR) {
//             std::cerr << "Send failed: " << WSAGetLastError() << std::endl;
//             break;
//         }
//
//         // Получение ответа от сервера
//         std::memset(buffer, 0, BUFFER_SIZE);
//         int bytesReceived = recv(clientSocket, buffer, BUFFER_SIZE, 0);
//         if (bytesReceived > 0) {
//             std::cout << "Server response: " << buffer << std::endl;
//         } else if (bytesReceived == 0) {
//             std::cout << "Server disconnected." << std::endl;
//             break;
//         } else {
//             std::cerr << "Receive failed: " << WSAGetLastError() << std::endl;
//             break;
//         }
//     }
//
//     closesocket(clientSocket);
//     WSACleanup();
//
//     return 0;
// }
